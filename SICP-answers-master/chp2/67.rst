练习 2.67
=============

定义出编码树，并解码给定的消息：

::

    1 ]=> (load "p112-huffman.scm")

    ;Loading "p112-huffman.scm"... done
    ;Value: weight

    1 ]=> (load "p113-decode.scm")

    ;Loading "p113-decode.scm"...
    ;  Loading "p112-huffman.scm"... done
    ;... done
    ;Value: choose-branch

    1 ]=> (define tree (make-code-tree (make-leaf 'A 4)
                       (make-code-tree (make-leaf 'B 2)
                                       (make-code-tree (make-leaf 'D 1)
                                                       (make-leaf 'C 1)))))

    ;Value: tree

    1 ]=> (define msg '(0 1 1 0 0 1 0 1 0 1 1 1 0))

    ;Value: msg

    1 ]=> (decode msg tree)

    ;Value 11: (a d a b b c a)


验证
-------

我们可以通过手工解码来验证 ``decode`` 的正确性。

首先给出编码的树的图示：

::

    [A B D C]
        *
       / \
      A   \
           * [B D C]
          / \
         B   \
              * [D C]
             / \
            D   C

然后根据树的图示，一步步地进行解码：

========== ===== =========== ============================ ============
当前消息位  方向 当前位置     剩余消息位                   已解码信息
========== ===== =========== ============================ ============
无          无    [A B D C]    0 1 1 0 0 1 0 1 0 1 1 1 0     无
0           左    A            1 1 0 0 1 0 1 0 1 1 1 0       A
1           右    [B D C]      1 0 0 1 0 1 0 1 1 1 0         A
1           右    [D C]        0 0 1 0 1 0 1 1 1 0           A
0           左    D            0 1 0 1 0 1 1 1 0             AD
0           左    A            1 0 1 0 1 1 1 0               ADA
1           右    [B D C]      0 1 0 1 1 1 0                 ADA
0           左    B            1 0 1 1 1 0                   ADAB
1           右    [B D C]      0 1 1 1 0                     ADAB
0           左    B            1 1 1 0                       ADABB
1           右    [B D C]      1 1 0                         ADABB
1           右    [D C]        1 0                           ADABB
1           右    C            0                             ADABBC
0           左    A                                          ADABBCA
========== ===== =========== ============================ ============


源码
----------

以下是前面的测试用到的代码，分别是书本 112 页的 huffman 表示以及 113 页的 ``decode`` 函数：

.. literalinclude:: code/p112-huffman.scm

.. literalinclude:: code/p113-decode.scm
